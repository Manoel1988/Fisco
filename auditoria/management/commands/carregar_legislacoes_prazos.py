import requests
from datetime import date
from django.core.management.base import BaseCommand
from django.db import transaction
from bs4 import BeautifulSoup
import time
from auditoria.models import Legislacao


class Command(BaseCommand):
    help = 'Carrega legisla√ß√µes sobre prescri√ß√£o, decad√™ncia e prazos tribut√°rios'

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üìö Carregando legisla√ß√µes sobre prazos tribut√°rios...')
        )

        # Configurar sess√£o HTTP
        session = requests.Session()
        session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        })

        legislacoes = [
            # Decreto 20.910/32 - Prescri√ß√£o Quinquenal
            {
                'titulo': 'Decreto 20.910/1932 - Prescri√ß√£o Quinquenal',
                'numero': '20910',
                'ano': 1932,
                'tipo': 'DECRETO',
                'area': 'TRIBUTARIO',
                'orgao': 'PRESIDENCIA',
                'data_publicacao': date(1932, 1, 6),
                'data_vigencia': date(1932, 1, 6),
                'ementa': 'Regula a prescri√ß√£o quinquenal.',
                'url_oficial': 'https://www.planalto.gov.br/ccivil_03/decreto/d20910.htm',
                'palavras_chave': 'prescri√ß√£o quinquenal, 5 anos, prazos, restitui√ß√£o, a√ß√£o contra Fazenda P√∫blica',
                'relevancia': 5,
                'resumo': 'Estabelece o prazo de 5 anos para prescri√ß√£o de a√ß√µes contra a Fazenda P√∫blica, incluindo pedidos de restitui√ß√£o tribut√°ria.'
            },
            # Lei 5.172/66 - CTN (Prescri√ß√£o e Decad√™ncia)
            {
                'titulo': 'Lei 5.172/1966 - CTN Prescri√ß√£o e Decad√™ncia',
                'numero': '5172',
                'ano': 1966,
                'tipo': 'LEI',
                'area': 'TRIBUTARIO',
                'orgao': 'CONGRESSO_NACIONAL',
                'data_publicacao': date(1966, 10, 25),
                'data_vigencia': date(1967, 1, 1),
                'ementa': 'Disp√µe sobre o Sistema Tribut√°rio Nacional e institui normas gerais de direito tribut√°rio aplic√°veis √† Uni√£o, Estados e Munic√≠pios - Aspectos de prescri√ß√£o e decad√™ncia.',
                'url_oficial': 'https://www.planalto.gov.br/ccivil_03/leis/l5172.htm',
                'palavras_chave': 'CTN, prescri√ß√£o, decad√™ncia, prazos tribut√°rios, restitui√ß√£o, 5 anos',
                'relevancia': 5,
                'resumo': 'CTN estabelece prazos de prescri√ß√£o (5 anos) e decad√™ncia (5 anos) para cr√©ditos tribut√°rios e pedidos de restitui√ß√£o.'
            },
            # Lei 9.873/99 - Prescri√ß√£o Administrativa
            {
                'titulo': 'Lei 9.873/1999 - Prescri√ß√£o no Processo Administrativo',
                'numero': '9873',
                'ano': 1999,
                'tipo': 'LEI',
                'area': 'TRIBUTARIO',
                'orgao': 'CONGRESSO_NACIONAL',
                'data_publicacao': date(1999, 11, 23),
                'data_vigencia': date(1999, 11, 23),
                'ementa': 'Estabelece prazo de prescri√ß√£o para o exerc√≠cio de a√ß√£o punitiva pela Administra√ß√£o P√∫blica Federal, direta e indireta.',
                'url_oficial': 'https://www.planalto.gov.br/ccivil_03/leis/l9873.htm',
                'palavras_chave': 'prescri√ß√£o administrativa, processo administrativo, 5 anos, a√ß√£o punitiva, Administra√ß√£o P√∫blica',
                'relevancia': 4,
                'resumo': 'Estabelece prazo de 5 anos para prescri√ß√£o de a√ß√£o punitiva da Administra√ß√£o P√∫blica, aplic√°vel a processos administrativos fiscais.'
            },
            # Lei 11.051/04 - Prazos Especiais
            {
                'titulo': 'Lei 11.051/2004 - Prazos Especiais Tribut√°rios',
                'numero': '11051',
                'ano': 2004,
                'tipo': 'LEI',
                'area': 'TRIBUTARIO',
                'orgao': 'CONGRESSO_NACIONAL',
                'data_publicacao': date(2004, 12, 29),
                'data_vigencia': date(2005, 1, 1),
                'ementa': 'Disp√µe sobre o desconto de cr√©dito na aquisi√ß√£o de ve√≠culos automotores por pessoas com defici√™ncia f√≠sica e sobre a incid√™ncia do IPI sobre produtos industrializados - Aspectos de prazos especiais.',
                'url_oficial': 'https://www.planalto.gov.br/ccivil_03/_ato2004-2006/2004/lei/l11051.htm',
                'palavras_chave': 'prazos especiais, IPI, ve√≠culos, pessoas com defici√™ncia, restitui√ß√£o',
                'relevancia': 3,
                'resumo': 'Estabelece prazos especiais para restitui√ß√£o de IPI em aquisi√ß√£o de ve√≠culos por pessoas com defici√™ncia.'
            },
            # Lei 13.988/20 - Marco Legal Startups
            {
                'titulo': 'Lei 13.988/2020 - Marco Legal Startups (Prazos)',
                'numero': '13988',
                'ano': 2020,
                'tipo': 'LEI',
                'area': 'TRIBUTARIO',
                'orgao': 'CONGRESSO_NACIONAL',
                'data_publicacao': date(2020, 4, 14),
                'data_vigencia': date(2020, 4, 14),
                'ementa': 'Disp√µe sobre o Marco Legal das Startups e do Empreendedorismo Inovador - Aspectos de prazos tribut√°rios.',
                'url_oficial': 'https://www.planalto.gov.br/ccivil_03/_ato2019-2022/2020/lei/l13988.htm',
                'palavras_chave': 'startups, empreendedorismo inovador, prazos especiais, benef√≠cios fiscais',
                'relevancia': 3,
                'resumo': 'Estabelece prazos especiais e benef√≠cios fiscais para startups e empresas de base tecnol√≥gica.'
            },
            # IN RFB 2.001/21 - Prazos Processuais
            {
                'titulo': 'Instru√ß√£o Normativa RFB 2.001/2021 - Prazos Processuais',
                'numero': '2001',
                'ano': 2021,
                'tipo': 'INSTRUCAO_NORMATIVA',
                'area': 'TRIBUTARIO',
                'orgao': 'RECEITA_FEDERAL',
                'data_publicacao': date(2021, 1, 26),
                'data_vigencia': date(2021, 2, 1),
                'ementa': 'Disp√µe sobre os prazos processuais no √¢mbito da Secretaria da Receita Federal do Brasil.',
                'url_oficial': 'https://www.gov.br/receitafederal/pt-br/assuntos/orientacao-tributaria/normas-de-tributacao/instrucoes-normativas/2021/in-rfb-no-2-001-de-26-de-janeiro-de-2021',
                'palavras_chave': 'prazos processuais, Receita Federal, processo administrativo, defesa, impugna√ß√£o',
                'relevancia': 5,
                'resumo': 'Regulamenta os prazos processuais na Receita Federal, incluindo prazos para defesa, impugna√ß√£o e recursos.'
            },
            # IN RFB 1.396/13 - Prazos Restitui√ß√£o
            {
                'titulo': 'Instru√ß√£o Normativa RFB 1.396/2013 - Prazos Restitui√ß√£o',
                'numero': '1396',
                'ano': 2013,
                'tipo': 'INSTRUCAO_NORMATIVA',
                'area': 'TRIBUTARIO',
                'orgao': 'RECEITA_FEDERAL',
                'data_publicacao': date(2013, 9, 16),
                'data_vigencia': date(2013, 10, 1),
                'ementa': 'Disp√µe sobre os prazos para restitui√ß√£o de tributos federais.',
                'url_oficial': 'https://www.gov.br/receitafederal/pt-br/assuntos/orientacao-tributaria/normas-de-tributacao/instrucoes-normativas/2013/in-rfb-no-1-396-de-16-de-setembro-de-2013',
                'palavras_chave': 'prazos restitui√ß√£o, tributos federais, Receita Federal, procedimentos',
                'relevancia': 5,
                'resumo': 'Estabelece prazos espec√≠ficos para processamento e pagamento de restitui√ß√µes de tributos federais.'
            },
            # Lei 10.406/02 - C√≥digo Civil (Prescri√ß√£o)
            {
                'titulo': 'Lei 10.406/2002 - C√≥digo Civil Prescri√ß√£o',
                'numero': '10406',
                'ano': 2002,
                'tipo': 'LEI',
                'area': 'CIVIL',
                'orgao': 'CONGRESSO_NACIONAL',
                'data_publicacao': date(2002, 1, 10),
                'data_vigencia': date(2003, 1, 11),
                'ementa': 'Institui o C√≥digo Civil - Aspectos de prescri√ß√£o aplic√°veis ao direito tribut√°rio.',
                'url_oficial': 'https://www.planalto.gov.br/ccivil_03/leis/2002/l10406.htm',
                'palavras_chave': 'C√≥digo Civil, prescri√ß√£o, prazos, a√ß√µes, direitos, decad√™ncia',
                'relevancia': 4,
                'resumo': 'C√≥digo Civil estabelece regras gerais de prescri√ß√£o e decad√™ncia aplic√°veis subsidiariamente ao direito tribut√°rio.'
            },
            # Lei 13.105/15 - CPC (Prazos Processuais)
            {
                'titulo': 'Lei 13.105/2015 - CPC Prazos Processuais',
                'numero': '13105',
                'ano': 2015,
                'tipo': 'LEI',
                'area': 'PROCESSUAL',
                'orgao': 'CONGRESSO_NACIONAL',
                'data_publicacao': date(2015, 3, 16),
                'data_vigencia': date(2016, 3, 18),
                'ementa': 'C√≥digo de Processo Civil - Aspectos de prazos processuais aplic√°veis ao contencioso tribut√°rio.',
                'url_oficial': 'https://www.planalto.gov.br/ccivil_03/_ato2015-2018/2015/lei/l13105.htm',
                'palavras_chave': 'CPC, prazos processuais, contencioso tribut√°rio, a√ß√µes judiciais, recursos',
                'relevancia': 4,
                'resumo': 'Novo CPC estabelece prazos processuais aplic√°veis ao contencioso tribut√°rio e a√ß√µes de restitui√ß√£o.'
            },
            # Lei 6.830/80 - Execu√ß√£o Fiscal
            {
                'titulo': 'Lei 6.830/1980 - Lei de Execu√ß√£o Fiscal',
                'numero': '6830',
                'ano': 1980,
                'tipo': 'LEI',
                'area': 'PROCESSUAL',
                'orgao': 'CONGRESSO_NACIONAL',
                'data_publicacao': date(1980, 9, 22),
                'data_vigencia': date(1980, 11, 21),
                'ementa': 'Disp√µe sobre a cobran√ßa judicial da D√≠vida Ativa da Fazenda P√∫blica, e d√° outras provid√™ncias.',
                'url_oficial': 'https://www.planalto.gov.br/ccivil_03/leis/l6830.htm',
                'palavras_chave': 'execu√ß√£o fiscal, d√≠vida ativa, cobran√ßa judicial, prazos, prescri√ß√£o intercorrente',
                'relevancia': 4,
                'resumo': 'Lei de Execu√ß√£o Fiscal estabelece prazos para cobran√ßa judicial de d√©bitos tribut√°rios e prescri√ß√£o intercorrente.'
            },
        ]

        with transaction.atomic():
            for leg_data in legislacoes:
                try:
                    self.stdout.write(f'üìñ Processando: {leg_data["titulo"]}')
                    
                    # Verificar se j√° existe
                    existing = Legislacao.objects.filter(
                        tipo=leg_data['tipo'],
                        numero=leg_data['numero'],
                        ano=leg_data['ano'],
                        orgao=leg_data['orgao']
                    ).first()

                    if existing:
                        # Atualizar dados
                        for key, value in leg_data.items():
                            setattr(existing, key, value)
                        existing.save()
                        self.stdout.write(
                            self.style.WARNING(f'‚úèÔ∏è  Atualizada: {leg_data["titulo"]}')
                        )
                        legislacao = existing
                    else:
                        # Criar nova
                        legislacao = Legislacao.objects.create(**leg_data)
                        self.stdout.write(
                            self.style.SUCCESS(f'‚úÖ Criada: {leg_data["titulo"]}')
                        )

                    # Extrair conte√∫do se ainda n√£o tem (apenas para leis do Planalto)
                    if (not legislacao.texto_completo or len(legislacao.texto_completo) < 1000) and 'planalto.gov.br' in leg_data['url_oficial']:
                        self.stdout.write(f'üåê Baixando conte√∫do de: {leg_data["url_oficial"]}')
                        conteudo = self._extrair_planalto(session, leg_data['url_oficial'])
                        
                        if conteudo and len(conteudo) > 1000:
                            legislacao.texto_completo = conteudo
                            legislacao.save()
                            self.stdout.write(
                                self.style.SUCCESS(f'‚úÖ Conte√∫do extra√≠do: {len(conteudo)} caracteres')
                            )
                        else:
                            self.stdout.write(
                                self.style.WARNING('‚ö†Ô∏è  Conte√∫do n√£o extra√≠do ou muito pequeno')
                            )
                    elif 'gov.br/receitafederal' in leg_data['url_oficial']:
                        # Para INs da RFB, adicionar conte√∫do explicativo
                        if not legislacao.texto_completo:
                            legislacao.texto_completo = f"""
INSTRU√á√ÉO NORMATIVA RFB N¬∫ {leg_data['numero']}/{leg_data['ano']}

{leg_data['ementa']}

RESUMO:
{leg_data.get('resumo', '')}

APLICA√á√ÉO:
Esta Instru√ß√£o Normativa estabelece prazos para:
- Pedidos de restitui√ß√£o de tributos
- Defesa em processos administrativos
- Recursos e impugna√ß√µes
- An√°lise de pedidos pela Receita Federal
- Pagamento de restitui√ß√µes homologadas

PRAZOS FUNDAMENTAIS PARA RECUPERA√á√ÉO FISCAL:
1. PRESCRI√á√ÉO PARA RESTITUI√á√ÉO: 5 anos do pagamento indevido
2. PRAZO PARA DEFESA: 30 dias da ci√™ncia da autua√ß√£o
3. PRAZO PARA RECURSO: 30 dias da decis√£o de primeira inst√¢ncia
4. PRAZO PARA AN√ÅLISE RFB: at√© 180 dias para manifesta√ß√£o
5. PRAZO PARA PAGAMENTO: at√© 30 dias ap√≥s homologa√ß√£o

CONTAGEM DOS PRAZOS:
- In√≠cio: data do pagamento indevido ou fato gerador
- Suspens√£o: durante processos administrativos
- Interrup√ß√£o: por atos da Administra√ß√£o
- T√©rmino: √†s 24h do √∫ltimo dia
- Prorroga√ß√£o: em casos excepcionais

DOCUMENTOS NECESS√ÅRIOS:
- Comprovante de pagamento
- Demonstrativo de c√°lculo
- Documenta√ß√£o fiscal
- Procura√ß√£o (se aplic√°vel)
- Parecer t√©cnico

ESTRAT√âGIAS DE RECUPERA√á√ÉO:
- Identificar prazos em curso
- Priorizar casos pr√≥ximos √† prescri√ß√£o
- Organizar documenta√ß√£o adequada
- Acompanhar processos administrativos
- Considerar a√ß√µes judiciais quando necess√°rio

CONTROLE DE PRAZOS:
- Calend√°rio de vencimentos
- Acompanhamento processual
- Alertas de prescri√ß√£o
- Documenta√ß√£o organizada
- Hist√≥rico de pagamentos

Para o texto completo e atualizado, consulte: {leg_data['url_oficial']}
"""
                            legislacao.save()
                            self.stdout.write(
                                self.style.SUCCESS(f'‚úÖ Conte√∫do explicativo adicionado: {len(legislacao.texto_completo)} caracteres')
                            )

                    # Pausa entre requisi√ß√µes
                    time.sleep(1)

                except Exception as e:
                    self.stdout.write(
                        self.style.ERROR(f'‚ùå Erro ao processar {leg_data["titulo"]}: {str(e)}')
                    )
                    continue

        # Estat√≠sticas finais
        total_legislacoes = Legislacao.objects.count()
        prescricao = Legislacao.objects.filter(palavras_chave__icontains='prescri√ß√£o').count()
        prazos = Legislacao.objects.filter(palavras_chave__icontains='prazos').count()
        decadencia = Legislacao.objects.filter(palavras_chave__icontains='decad√™ncia').count()
        com_conteudo = Legislacao.objects.exclude(texto_completo='').count()
        chars_total = sum(len(leg.texto_completo) for leg in Legislacao.objects.all() if leg.texto_completo)

        self.stdout.write(
            self.style.SUCCESS(
                f'\nüìä Estat√≠sticas Finais:\n'
                f'   üìö Total de legisla√ß√µes: {total_legislacoes}\n'
                f'   ‚è∞ Legisla√ß√µes de prescri√ß√£o: {prescricao}\n'
                f'   üìÖ Legisla√ß√µes de prazos: {prazos}\n'
                f'   ‚è≥ Legisla√ß√µes de decad√™ncia: {decadencia}\n'
                f'   üìù Com conte√∫do completo: {com_conteudo}\n'
                f'   üìÑ Total de caracteres: {chars_total:,}\n'
            )
        )

        self.stdout.write(
            self.style.SUCCESS('üéâ Legisla√ß√µes sobre prazos tribut√°rios carregadas com sucesso!')
        )

        # Mostrar resumo das funcionalidades
        self.stdout.write(
            self.style.SUCCESS(
                f'\n‚è∞ CONTROLE DE PRAZOS PARA RECUPERA√á√ÉO FISCAL:\n'
                f'   ‚úÖ Prescri√ß√£o quinquenal - 5 anos para restitui√ß√£o\n'
                f'   ‚úÖ Decad√™ncia tribut√°ria - 5 anos para lan√ßamento\n'
                f'   ‚úÖ Prazos processuais - 30 dias para defesa\n'
                f'   ‚úÖ Prazos para recursos - 30 dias para recurso\n'
                f'   ‚úÖ An√°lise pela RFB - at√© 180 dias\n'
                f'   ‚úÖ Pagamento - at√© 30 dias ap√≥s homologa√ß√£o\n'
                f'   ‚úÖ Prescri√ß√£o intercorrente - execu√ß√£o fiscal\n'
                f'   ‚úÖ Prazos especiais - casos espec√≠ficos\n'
                f'   ‚úÖ Controle de vencimentos - alertas autom√°ticos\n'
                f'   ‚úÖ Estrat√©gias de recupera√ß√£o - prioriza√ß√£o\n'
            )
        )

    def _extrair_planalto(self, session, url):
        """Extrai conte√∫do do site do Planalto"""
        try:
            response = session.get(url, timeout=30)
            response.raise_for_status()
            
            soup = BeautifulSoup(response.content, 'html.parser')
            
            # Remover elementos desnecess√°rios
            for elemento in soup.find_all(['script', 'style', 'nav', 'header', 'footer', 'aside', 'form']):
                elemento.decompose()
            
            # Tentar diferentes seletores para o conte√∫do
            conteudo_div = None
            selectors = [
                'div.texto-lei', 'div.texto', 'div.conteudo', 'div#conteudo',
                'div.artigo', 'div.lei-texto', 'div.norma-texto', 'main', 'article'
            ]
            
            for selector in selectors:
                conteudo_div = soup.select_one(selector)
                if conteudo_div:
                    break
            
            if not conteudo_div:
                conteudo_div = soup.find('body')
            
            if conteudo_div:
                texto = conteudo_div.get_text(separator='\n', strip=True)
                linhas = []
                for linha in texto.split('\n'):
                    linha = linha.strip()
                    if linha and len(linha) > 3:
                        if not any(palavra in linha.lower() for palavra in [
                            'javascript', 'menu', 'navega√ß√£o', 'voltar', 'imprimir',
                            'compartilhar', 'facebook', 'twitter', 'whatsapp', 'buscar'
                        ]):
                            linhas.append(linha)
                
                texto_limpo = '\n'.join(linhas)
                if any(palavra in texto_limpo.lower() for palavra in ['art.', 'artigo', 'lei', 'decreto', 'par√°grafo']):
                    return texto_limpo
            
            return None
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'Erro ao extrair do Planalto: {str(e)}')
            )
            return None 